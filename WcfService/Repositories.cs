#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
namespace WcfService.Repositories
{
	using Telerik.OpenAccess;
	using DataLayer;
	using System;
	using System.Linq;
	using System.Linq.Expressions;
	using System.Collections;
	using System.Collections.Generic;
	using System.Runtime.Serialization;

	
	public partial interface IRepository<TEntity>
	{
	    void Add(TEntity entity);
	    void Remove(TEntity entity);
	
	    TEntity Get(ObjectKey objectKey);
	    
	    IQueryable<TEntity> GetAll();
	
	    IQueryable<TEntity> Find(Expression<Func<TEntity, bool>> predicate);
	}
	
	public partial class Repository<TEntity> : IRepository<TEntity>
	        where TEntity : class
	{
	    protected IUnitOfWork unitOfWork;
	
	    public Repository(IUnitOfWork unitOfWork)
	    {
	        this.unitOfWork = unitOfWork;
	    }
	
	    public void Add(TEntity entity)
	    {
			this.unitOfWork.Add(entity);
	    }
	
	    public void Remove(TEntity entity)
	    {
	        this.unitOfWork.Delete(entity);
	    }
	
	    public IQueryable<TEntity> GetAll()
	    {
	        return this.unitOfWork.GetAll<TEntity>();
	    }
	
	    public TEntity Get(ObjectKey objectKey)
	    {
	        return this.unitOfWork.GetObjectByKey<TEntity>(objectKey);
	    }
	
	    public IQueryable<TEntity> Find(Expression<Func<TEntity, bool>> predicate)
	    {
	        return this.unitOfWork.GetAll<TEntity>().Where(predicate);
	    }
	}
	
	public partial interface IAziendaRepository : IRepository<Azienda>
	{ 
	
	}
	
	public partial class AziendaRepository : Repository<Azienda>, IAziendaRepository
	{
	    public AziendaRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICommessaRepository : IRepository<Commessa>
	{ 
	
	}
	
	public partial class CommessaRepository : Repository<Commessa>, ICommessaRepository
	{
	    public CommessaRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IFornitoreRepository : IRepository<Fornitore>
	{ 
	
	}
	
	public partial class FornitoreRepository : Repository<Fornitore>, IFornitoreRepository
	{
	    public FornitoreRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICommittenteRepository : IRepository<Committente>
	{ 
	
	}
	
	public partial class CommittenteRepository : Repository<Committente>, ICommittenteRepository
	{
	    public CommittenteRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ICentroCostoRepository : IRepository<CentroCosto>
	{ 
	
	}
	
	public partial class CentroCostoRepository : Repository<CentroCosto>, ICentroCostoRepository
	{
	    public CentroCostoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IFatturaAcquistoRepository : IRepository<FatturaAcquisto>
	{ 
	
	}
	
	public partial class FatturaAcquistoRepository : Repository<FatturaAcquisto>, IFatturaAcquistoRepository
	{
	    public FatturaAcquistoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IArticoloRepository : IRepository<Articolo>
	{ 
	
	}
	
	public partial class ArticoloRepository : Repository<Articolo>, IArticoloRepository
	{
	    public ArticoloRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPagamentoRepository : IRepository<Pagamento>
	{ 
	
	}
	
	public partial class PagamentoRepository : Repository<Pagamento>, IPagamentoRepository
	{
	    public PagamentoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IFatturaVenditaRepository : IRepository<FatturaVendita>
	{ 
	
	}
	
	public partial class FatturaVenditaRepository : Repository<FatturaVendita>, IFatturaVenditaRepository
	{
	    public FatturaVenditaRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IIncassoRepository : IRepository<Incasso>
	{ 
	
	}
	
	public partial class IncassoRepository : Repository<Incasso>, IIncassoRepository
	{
	    public IncassoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAnagraficaFornitoreRepository : IRepository<AnagraficaFornitore>
	{ 
	
	}
	
	public partial class AnagraficaFornitoreRepository : Repository<AnagraficaFornitore>, IAnagraficaFornitoreRepository
	{
	    public AnagraficaFornitoreRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAnagraficaCommittenteRepository : IRepository<AnagraficaCommittente>
	{ 
	
	}
	
	public partial class AnagraficaCommittenteRepository : Repository<AnagraficaCommittente>, IAnagraficaCommittenteRepository
	{
	    public AnagraficaCommittenteRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface ISALRepository : IRepository<SAL>
	{ 
	
	}
	
	public partial class SALRepository : Repository<SAL>, ISALRepository
	{
	    public SALRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAnagraficaArticoloRepository : IRepository<AnagraficaArticolo>
	{ 
	
	}
	
	public partial class AnagraficaArticoloRepository : Repository<AnagraficaArticolo>, IAnagraficaArticoloRepository
	{
	    public AnagraficaArticoloRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IAccountRepository : IRepository<Account>
	{ 
	
	}
	
	public partial class AccountRepository : Repository<Account>, IAccountRepository
	{
	    public AccountRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IReportJobRepository : IRepository<ReportJob>
	{ 
	
	}
	
	public partial class ReportJobRepository : Repository<ReportJob>, IReportJobRepository
	{
	    public ReportJobRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPagamentoUnificatoRepository : IRepository<PagamentoUnificato>
	{ 
	
	}
	
	public partial class PagamentoUnificatoRepository : Repository<PagamentoUnificato>, IPagamentoUnificatoRepository
	{
	    public PagamentoUnificatoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IPagamentoUnificatoFatturaAcquistoRepository : IRepository<PagamentoUnificatoFatturaAcquisto>
	{ 
	
	}
	
	public partial class PagamentoUnificatoFatturaAcquistoRepository : Repository<PagamentoUnificatoFatturaAcquisto>, IPagamentoUnificatoFatturaAcquistoRepository
	{
	    public PagamentoUnificatoFatturaAcquistoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface INotaCreditoRepository : IRepository<NotaCredito>
	{ 
	
	}
	
	public partial class NotaCreditoRepository : Repository<NotaCredito>, INotaCreditoRepository
	{
	    public NotaCreditoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface IResoRepository : IRepository<Reso>
	{ 
	
	}
	
	public partial class ResoRepository : Repository<Reso>, IResoRepository
	{
	    public ResoRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
	
	public partial interface INotificaRepository : IRepository<Notifica>
	{ 
	
	}
	
	public partial class NotificaRepository : Repository<Notifica>, INotificaRepository
	{
	    public NotificaRepository(IEntitiesModelUnitOfWork unitOfWork)
	        : base(unitOfWork)
	    {
	    }
	}
}
#pragma warning restore 1591
