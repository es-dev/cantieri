<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="editStato.Items" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpHaXptb3guV2ViR1VJLkZvcm1zLCBWZXJzaW9uPTQuNS4xNTcw
        MS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWM1MDhiNDEzODZjNjBmMWQFAQAAAC1H
        aXptb3guV2ViR1VJLkZvcm1zLkNvbWJvQm94K09iamVjdENvbGxlY3Rpb24DAAAACG1vYmpMaXN0Cm1v
        YmpQYXJlbnQMbW9iakNvbXBhcmVyAwQDHFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3QcR2l6bW94
        LldlYkdVSS5Gb3Jtcy5Db21ib0JveAIAAAAcU3lzdGVtLkNvbGxlY3Rpb25zLklDb21wYXJlcgIAAAAJ
        AwAAAAkEAAAACgQDAAAAHFN5c3RlbS5Db2xsZWN0aW9ucy5BcnJheUxpc3QDAAAABl9pdGVtcwVfc2l6
        ZQhfdmVyc2lvbgUAAAgICQUAAAAAAAAAAAAAAAwGAAAAW0dpem1veC5XZWJHVUkuQ29tbW9uLCBWZXJz
        aW9uPTQuNS4xNTcwMS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPTI2M2ZhNGVmNjk0
        YWNmZjYFBAAAABxHaXptb3guV2ViR1VJLkZvcm1zLkNvbWJvQm94CQAAABFDb250cm9sK0RyYWdFbnRl
        chFDb250cm9sK01vdXNlTW92ZRJDb250cm9sK01vdXNlTGVhdmUSQ29udHJvbCtNb3VzZUVudGVyFENv
        bnRyb2wrbWVubUVkaXRNb2RlHENvbXBvbmVudCttb2JqUHJveHlDb21wb25lbnQjQ29tcG9uZW50K21v
        YmpXaW5Gb3Jtc0NvbXBhdGliaWxpdHknQ29tcG9uZW50K09ic2VydmFibGVJdGVtUHJvcGVydHlDaGFu
        Z2VkG1NlcmlhbGl6YWJsZU9iamVjdCttb2JqRGF0YQQEBAQEBAQEBSRHaXptb3guV2ViR1VJLkZvcm1z
        LkRyYWdFdmVudEhhbmRsZXICAAAAJUdpem1veC5XZWJHVUkuRm9ybXMuTW91c2VFdmVudEhhbmRsZXIC
        AAAAJUdpem1veC5XZWJHVUkuRm9ybXMuTW91c2VFdmVudEhhbmRsZXICAAAAJUdpem1veC5XZWJHVUku
        Rm9ybXMuTW91c2VFdmVudEhhbmRsZXICAAAAHEdpem1veC5XZWJHVUkuRm9ybXMuRWRpdE1vZGUGAAAA
        Ikdpem1veC5XZWJHVUkuRm9ybXMuUHJveHlDb21wb25lbnQCAAAANEdpem1veC5XZWJHVUkuRm9ybXMu
        TGlzdENvbnRyb2xXaW5Gb3Jtc0NvbXBhdGliaWxpdHkCAAAAREdpem1veC5XZWJHVUkuQ29tbW9uLklu
        dGVyZmFjZXMuT2JzZXJ2YWJsZUl0ZW1Qcm9wZXJ0eUNoYW5nZWRIYW5kbGVyBgAAAAIAAAAKCgoKBfn/
        //8cR2l6bW94LldlYkdVSS5Gb3Jtcy5FZGl0TW9kZQEAAAAHdmFsdWVfXwAIBgAAAAEAAAAKCQgAAAAK
        ChAFAAAAAAAAAAwJAAAA+AFtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWws
        IFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODldLFtTeXN0ZW0uQm9vbGVhbiwgbXNjb3JsaWIs
        IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5
        MzRlMDg5XV0sIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGlj
        S2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OQUIAAAANEdpem1veC5XZWJHVUkuRm9ybXMuTGlzdENvbnRy
        b2xXaW5Gb3Jtc0NvbXBhdGliaWxpdHkCAAAAN1dpbkZvcm1zQ29tcGF0aWJpbGl0eSttb2JqRmVhdHVy
        ZUlzT25JbmRleEJ5RmVhdHVyZU5hbWUoV2luRm9ybXNDb21wYXRpYmlsaXR5K09wdGlvblZhbHVlQ2hh
        bmdlZAQENlN5c3RlbS5Db2xsZWN0aW9ucy5HZW5lcmljLkRpY3Rpb25hcnlgMltbU3lzdGVtLlN0cmlu
        ZwkAAAAiU3lzdGVtLkRlbGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcgIAAAACAAAACQoAAAAJCwAAAAwM
        AAAAmgFtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWI3N2E1YzU2MTkzNGUwODldXSwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1u
        ZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5BQoAAAA2U3lzdGVtLkNvbGxlY3Rp
        b25zLkdlbmVyaWMuRGljdGlvbmFyeWAyW1tTeXN0ZW0uU3RyaW5nAwAAAAdWZXJzaW9uCENvbXBhcmVy
        CEhhc2hTaXplAAQACENTeXN0ZW0uQ29sbGVjdGlvbnMuR2VuZXJpYy5HZW5lcmljRXF1YWxpdHlDb21w
        YXJlcmAxW1tTeXN0ZW0uU3RyaW5nDAAAAAgJAAAAAAAAAAkNAAAAAAAAAAULAAAAIlN5c3RlbS5EZWxl
        Z2F0ZVNlcmlhbGl6YXRpb25Ib2xkZXIDAAAACERlbGVnYXRlB3RhcmdldDAHbWV0aG9kMAMEAzBTeXN0
        ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkcR2l6bW94LldlYkdVSS5G
        b3Jtcy5Db21ib0JveAIAAAAvU3lzdGVtLlJlZmxlY3Rpb24uTWVtYmVySW5mb1NlcmlhbGl6YXRpb25I
        b2xkZXICAAAACQ4AAAAJBAAAAAkQAAAABQ0AAABDU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVyaWMuR2Vu
        ZXJpY0VxdWFsaXR5Q29tcGFyZXJgMVtbU3lzdGVtLlN0cmluZwAAAAAMAAAABA4AAAAwU3lzdGVtLkRl
        bGVnYXRlU2VyaWFsaXphdGlvbkhvbGRlcitEZWxlZ2F0ZUVudHJ5BwAAAAR0eXBlCGFzc2VtYmx5BnRh
        cmdldBJ0YXJnZXRUeXBlQXNzZW1ibHkOdGFyZ2V0VHlwZU5hbWUKbWV0aG9kTmFtZQ1kZWxlZ2F0ZUVu
        dHJ5AQECAQEBAzBTeXN0ZW0uRGVsZWdhdGVTZXJpYWxpemF0aW9uSG9sZGVyK0RlbGVnYXRlRW50cnkG
        EQAAAEtHaXptb3guV2ViR1VJLkZvcm1zLldpbkZvcm1zQ29tcGF0aWJpbGl0eStXaW5Gb3Jtc0NvbXBh
        dGliaWxpdHlFdmVudEhhbmRsZXIGEgAAAFpHaXptb3guV2ViR1VJLkZvcm1zLCBWZXJzaW9uPTQuNS4x
        NTcwMS4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWM1MDhiNDEzODZjNjBmMWQGEwAA
        AAd0YXJnZXQwCRIAAAAGFQAAAB1HaXptb3guV2ViR1VJLkZvcm1zLkNvbXBvbmVudAYWAAAAJ1dpbkZv
        cm1zQ29tcGF0aWJpbGl0eU9wdGlvblZhbHVlQ2hhbmdlZAoEEAAAAC9TeXN0ZW0uUmVmbGVjdGlvbi5N
        ZW1iZXJJbmZvU2VyaWFsaXphdGlvbkhvbGRlcgcAAAAETmFtZQxBc3NlbWJseU5hbWUJQ2xhc3NOYW1l
        CVNpZ25hdHVyZQpTaWduYXR1cmUyCk1lbWJlclR5cGUQR2VuZXJpY0FyZ3VtZW50cwEBAQEBAAMIDVN5
        c3RlbS5UeXBlW10JFgAAAAkSAAAACRUAAAAGGQAAAG9Wb2lkIFdpbkZvcm1zQ29tcGF0aWJpbGl0eU9w
        dGlvblZhbHVlQ2hhbmdlZChTeXN0ZW0uT2JqZWN0LCBHaXptb3guV2ViR1VJLkZvcm1zLldpbkZvcm1z
        Q29tcGF0aWJpbGl0eUV2ZW50QXJncykGGgAAAHZTeXN0ZW0uVm9pZCBXaW5Gb3Jtc0NvbXBhdGliaWxp
        dHlPcHRpb25WYWx1ZUNoYW5nZWQoU3lzdGVtLk9iamVjdCwgR2l6bW94LldlYkdVSS5Gb3Jtcy5XaW5G
        b3Jtc0NvbXBhdGliaWxpdHlFdmVudEFyZ3MpCAAAAAoL
</value>
  </data>
</root>